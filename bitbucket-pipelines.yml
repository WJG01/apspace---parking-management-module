image: node:erbium-alpine
pipelines:
  # default:
  #   - step: &build-test
  #       name: Build & Test
  #       caches:
  #         - node
  #       script:
  #         - apk add firefox-esr
  #         - yarn install
  #         - yarn lint
  #         - yarn test --configuration=ci
  #           # - yarn e2e --configuration=ci
  #         - yarn build --configuration=ci
  # pull-requests:
  #   '**':
  #     - step: *build-test
  branches:
    production:
    - step:
        image: cticti/aws-cli:node-ionic-alpine
        caches:
          - node
        script:
          - npm i
          - npm i @babel/compat-data@7.8.0 # temp solution (build fails due to babel issues)
          - ionic build --prod
          - aws s3 sync www/ s3://apspace-production/ --acl public-read
          - aws cloudfront create-invalidation --distribution-id E2U0MAK0TADMRA --paths "/*"
    staging:
    - step:
        image: cticti/aws-cli:node-ionic-alpine
        caches:
          - node
        script:
          - npm i
          - ionic build --prod
          - aws s3 sync www/ s3://apspace-staging/ --acl public-read